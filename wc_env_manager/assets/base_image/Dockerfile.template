# :Author: Jonathan Karr <karr@mssm.edu>
# :Date: 2018-08-28
# :Copyright: 2017-2018, Karr Lab
# :License: MIT

# base
FROM ubuntu

# upgrade
RUN apt-get update -y \
    && apt-get upgrade -y \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# Create user to run operations in containers
RUN groupadd -r -g 999 container_user \
    && useradd -m -r -u 999 -g container_user container_user

# set time zone
ARG timezone=America/New_York
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends tzdata \
    && rm -rf /var/lib/apt/lists/* \
    && ln -fs /usr/share/zoneinfo/$timezone /etc/localtime \
    && dpkg-reconfigure -f noninteractive tzdata

# set locale
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        locales \
    && rm -rf /var/lib/apt/lists/* \
    && locale-gen en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

# install utilities: Git, SSH
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        git \
        ssh \
    && rm -rf /var/lib/apt/lists/*

# install Python
ARG python_version=3.6.8
ARG python_version_major_minor=3.6
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        libbz2-dev \
        libexpat1 \
        libexpat1-dev \
        libffi-dev \
        libffi6 \
        libreadline-dev \
        libsqlite3-dev \
        libssl-dev \
        tar \
        tk-dev \
        wget \
        zlib1g-dev \
        # libdb5.3-dev # Berkeley DB \
        # libgdbm-dev # GNU dbm database \
        # liblzma-dev # LZMA compression \
        # libncursesw-dev # text-based user interfaces \
        # libtinfo-dev # terminal information \
        # mime-support # MIME support \
    \
    && cd /tmp \
    && wget https://www.python.org/ftp/python/${python_version}/Python-${python_version}.tgz -O /tmp/Python-${python_version}.tgz \
    && tar xzf /tmp/Python-${python_version}.tgz \
    && cd /tmp/Python-${python_version} \
    && ./configure \
        --prefix=/usr/local \
        --enable-optimizations \
        --enable-shared \
        --enable-unicode=ucs4 \
        --with-system-expat \
        --with-system-ffi \
    && make \
    # && make test \
    && make install \
    && ldconfig \
    && python${python_version_major_minor} -m ensurepip \
    && cd / \
    && rm -r /tmp/Python-${python_version}.tgz \
    && rm -r /tmp/Python-${python_version} \
    \
    && apt-get remove -y \
        build-essential \
        ca-certificates \
        libbz2-dev \
        libexpat1-dev \
        libffi-dev \
        libreadline-dev \
        libsqlite3-dev \
        libssl-dev \
        tk-dev \
        wget \
        zlib1g-dev \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# Java
{% if java_install -%}
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        default-jre \
    && rm -rf /var/lib/apt/lists/*
{%- endif %}

# Node
{% if npm_install -%}
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        nodejs \
        npm \
    && rm -rf /var/lib/apt/lists/
{%- endif %}

# curl
{% if curl_install -%}
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        curl \
    && rm -rf /var/lib/apt/lists/
{%- endif %}

# install PostgreSQL client
{% if postgresql_client_install -%}
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        gnupg \
        wget \
    && ubuntu_version=`cat /etc/lsb-release | grep DISTRIB_CODENAME | cut -d "=" -f 2` \
    && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
    && echo "deb http://apt.postgresql.org/pub/repos/apt/ ${ubuntu_version}-pgdg main" >> /etc/apt/sources.list.d/pgdg_${ubuntu_version}.list \
    && apt-get update -y \
    && apt-get install -y --no-install-recommends \
        postgresql-client-10 \
    \
    && apt-get remove -y \
        gnupg \
        wget \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*
{%- endif %}

# install openbabel
{% if openbabel_install -%}
ARG openbabel_version=2.4.1
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        build-essential \
        cmake \
        libcairo2-dev \
        libeigen3-dev \
        libxml2-dev \
        tar \
        wget \
        zlib1g-dev \
    \
    && cd /tmp \
    && openbabel_version_dash=$(echo $openbabel_version | sed 's/\./-/g') \
    && wget https://github.com/openbabel/openbabel/archive/openbabel-${openbabel_version_dash}.tar.gz -O /tmp/openbabel-${openbabel_version}.tar.gz \
    && tar -xvvf /tmp/openbabel-${openbabel_version}.tar.gz \
    && cd openbabel-openbabel-${openbabel_version_dash} \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make \
    # && make test \
    && make install \
    && ldconfig \
    && cd / \
    && rm -r /tmp/openbabel-${openbabel_version}.tar.gz \
    && rm -r /tmp/openbabel-openbabel-${openbabel_version_dash} \
    \
    && apt-get remove -y \
        build-essential \
        cmake \
        libcairo2-dev \
        libeigen3-dev \
        libxml2-dev \
        wget \
        zlib1g-dev \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*
{%- endif %}

# install ChemAxon Marvin

{% if marvin_install -%}
ARG marvin_version=19.7
COPY marvin_linux_${marvin_version}.deb /tmp/
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        default-jre \
        default-jdk \
    \
    && cd /tmp \
    && dpkg -i marvin_linux_${marvin_version}.deb \
    && rm marvin_linux_${marvin_version}.deb \
    \
    && rm -rf /var/lib/apt/lists/*
ENV JAVA_HOME=/usr/lib/jvm/default-java \
    CLASSPATH=$CLASSPATH:/opt/chemaxon/marvinsuite/lib/MarvinBeans.jar
{%- endif %}



# Install Python packages; pbr has to be installed first to workaround error in sphinxcontrib-spelling installation
COPY requirements.txt /tmp/
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        build-essential \
        default-libmysqlclient-dev \
        enchant \
        graphviz \
        pandoc \
        swig \
    \
    && pip${python_version_major_minor} install -U pip setuptools \
    && pip${python_version_major_minor} install -U \
        cython \
        ipython \
        mock \
        numpy \
        pbr \
        pypandoc \
        requests \
        six \
    && pip${python_version_major_minor} install -U git+https://github.com/jjhelmus/CyLP.git@py3#egg=cylp \
    && pip${python_version_major_minor} install -r /tmp/requirements.txt \
    && rm tmp/requirements.txt 

# Install NCBI taxonomy database and ETE3 package
RUN pip${python_version_major_minor} install ete3 \
    && python${python_version_major_minor} -c "import ete3; ete3.NCBITaxa().get_descendant_taxa('Homo');" \
    && rm /taxdump.tar.gz

# Save image tag to file so it is accessible from within containers
ARG image_tag={{ image_tag }}
RUN echo ${image_tag} > /etc/docker-image-tag

# install debugging utilities and compiling utilities
RUN apt-get update -y \
    && apt-get install -y \
        nano \
        pkg-config \
        swig
    && pip${python_version_major_minor} install -U pip setuptools \
    && pip${python_version_major_minor} install openbabel

# cleanup
RUN apt-get remove -y \
    build-essential \
    cmake

# final command
WORKDIR /root
CMD bash
